{"ast":null,"code":"var _jsxFileName = \"/Users/savo/Desktop/akulalaw-t/src/components/Button.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  variant,\n  children,\n  className\n}) => {\n  const baseStyles = className;\n\n  // Define styles for the variants\n  const variantStyles = {\n    primary: \"text-[#ffffff] bg-[#000] border-[#000] relative overflow-hidden inline-block px-[35px] py-[11px] text-[16px] leading-[24px] border-[2px] border-[solid] font-primary font-black tracking-[0.06em] uppercase whitespace-nowrap overflow-ellipsis text-center Typography.Smp align-middle select-none [transition:250ms_all_ease-in-out]   hover:text-[#000] hover:bg-[rgba(0,_0,_0,_0.05)] hover:border-[rgba(0,_0,_0,_0.05)] \",\n    secondary: \"text-[#000] bg-[#fff] border-[#fff] relative overflow-hidden inline-block px-[35px] py-[11px] text-[16px] leading-[24px] border-[2px] border-[solid] font-primary font-black tracking-[0.06em] uppercase whitespace-nowrap overflow-ellipsis text-center Typography.Smp align-middle select-none [transition:250ms_all_ease-in-out]   hover:text-[#000] hover:bg-black hover:border-[#fff] hover:text-[#fff] \"\n  };\n\n  // Select styles based on the `variant` prop\n  const buttonStyles = `${baseStyles} ${variantStyles[variant] || variantStyles.primary}`;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: buttonStyles,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["Button","variant","children","className","baseStyles","variantStyles","primary","secondary","buttonStyles","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/savo/Desktop/akulalaw-t/src/components/Button.js"],"sourcesContent":["const Button = ({ variant, children, className }) => {\n  const baseStyles = className;\n\n  // Define styles for the variants\n  const variantStyles = {\n    primary:\n      \"text-[#ffffff] bg-[#000] border-[#000] relative overflow-hidden inline-block px-[35px] py-[11px] text-[16px] leading-[24px] border-[2px] border-[solid] font-primary font-black tracking-[0.06em] uppercase whitespace-nowrap overflow-ellipsis text-center Typography.Smp align-middle select-none [transition:250ms_all_ease-in-out]   hover:text-[#000] hover:bg-[rgba(0,_0,_0,_0.05)] hover:border-[rgba(0,_0,_0,_0.05)] \",\n    secondary:\n      \"text-[#000] bg-[#fff] border-[#fff] relative overflow-hidden inline-block px-[35px] py-[11px] text-[16px] leading-[24px] border-[2px] border-[solid] font-primary font-black tracking-[0.06em] uppercase whitespace-nowrap overflow-ellipsis text-center Typography.Smp align-middle select-none [transition:250ms_all_ease-in-out]   hover:text-[#000] hover:bg-black hover:border-[#fff] hover:text-[#fff] \",\n  };\n\n  // Select styles based on the `variant` prop\n  const buttonStyles = `${baseStyles} ${variantStyles[variant] || variantStyles.primary}`;\n\n  return <button className={buttonStyles}>{children}</button>;\n};\n\nexport default Button;\n"],"mappings":";;AAAA,MAAMA,MAAM,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EACnD,MAAMC,UAAU,GAAGD,SAAS;;EAE5B;EACA,MAAME,aAAa,GAAG;IACpBC,OAAO,EACL,+ZAA+Z;IACjaC,SAAS,EACP;EACJ,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,GAAGJ,UAAU,IAAIC,aAAa,CAACJ,OAAO,CAAC,IAAII,aAAa,CAACC,OAAO,EAAE;EAEvF,oBAAOG,OAAA;IAAQN,SAAS,EAAEK,YAAa;IAAAN,QAAA,EAAEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAC7D,CAAC;AAACC,EAAA,GAfId,MAAM;AAiBZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}